@model IEnumerable<AppTest.Models.TimeSheet>
<h3>Person is the best of month: <i>@ViewBag.Employee</i> with @ViewBag.Max hours/Month</h3>
<div class="card">
    <div class="card-header">
        <form asp-controller="Employees" asp-action="TimeSheetByMonth" method="get">
            <div class="row">
                <div class="col-md-12 text-end">
                    <div class="form-group">
                        Month: <input type="text" name="Month" />
                        <input type="submit" value="Search" class="btn btn-primary" />
                    </div>
                    <div class="form-group">
                        <a asp-controller="Employees" asp-action="CalculateSalary" asp-route-Month="0" class="btn btn-outline-info m-2  "><i class="bi bi-box-arrow-in-up"></i>Salary</a>
                    </div>
                </div>
            </div>


        </form>
    </div>
    @if (Model != null)
    {
        TimeSpan max = new TimeSpan();
        Dictionary<TimeSheet, TimeSpan> hightest = new Dictionary<TimeSheet, TimeSpan>();
        foreach (var item in Model)
        {

            TimeSpan time = new TimeSpan();
            if (item.BreakStart == null)
            {
                time = (TimeSpan)(item.End - item.Start);
                max = time;
            }
            else
            {
                time = (TimeSpan)(item.BreakStart - item.Start) + (TimeSpan)(item.End - item.BreakEnd);
                max = time;
            }
            if (hightest == null)
            {
                hightest.Add(item, max);
            }
            else
            {
                if (hightest.FirstOrDefault().Value < max)
                {
                    hightest.Clear();
                    hightest.Add(item, max);
                }
            }

        }
        <div class="card-body p-3">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th scope="col" style="width:150px;" class="text-center">Employee's Name</th>
                        <th scope="col" style="width:150px;" class="text-center">Day of Month</th>
                        <th scope="col" style="width:200px;" class="text-center">Time start</th>
                        <th scope="col" style="width:150px;" class="text-center">Time BreakStart</th>
                        <th scope="col" style="width:200px;" class="text-center">Time BreakEnd</th>
                        <th scope="col" style="width:300px;" class="text-center">Time end</th>
                        <th scope="col" style="width:300px;" class="text-center">total</th>
                        <th scope="col" class="text-center"></th>
                    </tr>

                    <tr>
                        @{
                            var a = hightest.FirstOrDefault().Key;
                            var b = hightest.FirstOrDefault().Value;
                            double hour = b.TotalMinutes / 60;
                        }
                        <th scope="col" style="width:150px;" class="text-center">@a.employee.FirstName @a.employee.LastName</th>
                        <th scope="col" style="width:150px;" class="text-center"></th>
                        <th scope="col" style="width:200px;" class="text-center"></th>
                        <th scope="col" style="width:150px;" class="text-center"></th>
                        <th scope="col" style="width:200px;" class="text-center"></th>
                        <th scope="col" style="width:300px;" class="text-center"></th>
                        <th scope="col" style="width:300px;" class="text-center">@hour.ToString("##0.##")</th>
                        <th scope="col" class="text-center"></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        TimeSpan time = new TimeSpan();
                        double total;
                        if (item.BreakStart == null)
                        {
                            time = (TimeSpan)(item.End - item.Start);
                        }
                        else
                        {
                            time = (TimeSpan)(item.BreakStart - item.Start) + (TimeSpan)(item.End - item.BreakEnd);
                        }
                        total = time.TotalMinutes / 60;
                        <tr>
                            <th scope="row" class="text-center align-middle">@item.employee.FirstName @item.employee.LastName</th>
                            <td class="text-center align-middle">@item.Start.Day / @item.Start.Month</td>
                            <td class="text-center align-middle">@item.Start.TimeOfDay</td>
                            @if (item.BreakStart != null)
                            {
                                <td class="text-center align-middle">@item.BreakStart.Value.TimeOfDay</td>
                                <td class="text-center align-middle">@item.BreakEnd.Value.TimeOfDay</td>
                            }
                            else
                            {
                                <td class="text-center align-middle"></td>
                                <td class="text-center align-middle"></td>
                            }
                            <td class="text-center align-middle">@item.End.TimeOfDay</td>
                        <td class="text-center align-middle">
                            @total.ToString("##0.##") Hours
                        </td>
                        <td class="text-center align-middle">
                            <a asp-controller="TimeSheets" asp-action="Edit" asp-route-Id="@item.Id" class="btn btn-outline-warning"><i class="bi bi-box-arrow-in-up"></i>Edit TimeSheets</a>
                            <a asp-controller="TimeSheets" asp-action="Delete" asp-route-Id="@item.Id" class="btn btn-outline-danger"><i class="bi bi-box-arrow-in-up"></i>Delete TimeSheets</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    }
</div>